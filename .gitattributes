import java.util.*;
public class BattleShips 
{
    public static int Rows = 10;//limit the numbers of row
    public static int Cols = 10;//limit the numbers of colonel
    public static int playerShips;
    public static int computerShips;
    public static String[][] grid = new String[Rows][Cols];
    public static int[][] missedGuesses = new int[Rows][Cols];

    public static void main()
    {
        System.out.println("\nDeploy your ships now to play the game.");

        //generating ocean map
        generateOceanMap();

        //deploying players ship
        deployPlayerShips();

        //deploy computer's ships
        deployComputerShips();

        //Battle
        while(BattleShips.playerShips != 0 && BattleShips.computerShips != 0)
        {
            Battle();
        }

        //Step 5 Done
        DONE();
    }
    //step 1
    public static void generateOceanMap()
    {
        for(int i = 0; i < Cols; i++)
            System.out.print(i);
        System.out.println();
        //Middle section of Ocean Map
        for(int i = 0; i < grid.length; i++)
        {
            for (int j = 0; j < grid[i].length; j++)
            {
                grid[i][j] = " ";
                if (j == 0)
                    System.out.print(i + "|" + grid[i][j]);
                else if (j == grid[i].length - 1)
                    System.out.print(grid[i][j] + "|" + i);
                else
                    System.out.print(grid[i][j]);
            }
            System.out.println();
        }

        //Last section of Ocean Map
        System.out.print("  ");
        for (int i = 0; i < numCols; i++)
        {
            System.out.print(i);
        }
        System.out.println();
       }//generating map

    //step 2
    public static void deployPlayerShips()
    {
        Scanner input = new Scanner(System.in);//copied from internet

        System.out.println("\nDeploy your ships:");
        //Deploying five ships for player
        for (int i = 1; i <= 5; ) //5 ships available
        {
            System.out.print("Enter X coordinate for your " +  i+ " ship: ");
            int x = input.nextInt();
            System.out.print("Enter Y coordinate for your " + i + " ship: ");
            int y = input.nextInt();
            if((x >= 0 && x < Rows) && (y >= 0 && y < Cols) && (grid[x][y] == " "))
            {
                grid[x][y] =   "@";
                i++;
            }
            else if((x >= 0 && x < Rows) && (y >= 0 && y < Cols) && grid[x][y] == "@")
                System.out.println("You can't place two or more ships on the same location");
            else
                System.out.println("You can't place ships outside the " + numRows + " by " + numCols + " grid");
        }
        generateOceanMap();
    }

    public static void deployComputerShips()
    {
        System.out.println("\nComputer is deploying ships");
        //Deploying five ships for computer
        BattleShips.computerShips = 5;
        for (int i = 1; i <= BattleShips.computerShips; )
        {
            int x = (int)(Math.random() * 10);//copied from internet
            int y = (int)(Math.random() * 10);//

            if((x >= 0 && x < Rows) && (y >= 0 && y < Cols) && (grid[x][y] == " "))
            {
                grid[x][y] = "x";
                System.out.println(i + ". ship DEPLOYED");
                i++;
            }
        }
        generateOceanMap();
    }

    public static void Battle()
    {
        playerTurn();
        computerTurn();
        generateOceanMap();
        System.out.println();
        System.out.println("Your ships: " + BattleShips.playerShips + " | Computer ships: " + BattleShips.computerShips);
        System.out.println();
    }
//copied
    public static void playerTurn()
    {
        System.out.println("\nYOUR TURN");
        int x = -1, y = -1;
        do {
            Scanner input = new Scanner(System.in);//unknown
            System.out.print("Enter X coordinate: ");
            x = input.nextInt();
            System.out.print("Enter Y coordinate: ");
            y = input.nextInt();

            if ((x >= 0 && x < Rows) && (y >= 0 && y < Cols)) //valid guess
            {
                if (grid[x][y] == "x") //if computer ship is already there; computer loses ship
                {
                    System.out.println("Boom! You sunk the ship!");
                    grid[x][y] = "!"; //Hit mark
                    --BattleShips.computerShips;
                }
                else if (grid[x][y] == "@") {
                    System.out.println("Oh no, you sunk your own ship ");
                    grid[x][y] = "x";
                    --BattleShips.playerShips;
                    ++BattleShips.computerShips;
                }
                else if (grid[x][y] == " ")
                {
                    System.out.println("You missed");
                    grid[x][y] = "-";
                }
            }
            else
                System.out.println("You can't place ships outside the " + numRows + " by " + numCols + " grid");
        }while((x < 0 || x >= Rows) || (y < 0 || y >= Cols));  //keep re-prompting till valid guess
    }

    public static void computerTurn(){
        System.out.println("\nCOMPUTER'S TURN");
        //Guess co-ordinates
        int x = -1, y = -1;
        do {
            x = (int)(Math.random() * 10);
            y = (int)(Math.random() * 10);

            if ((x >= 0 && x < Rows) && (y >= 0 && y < Cols)) //valid guess
            {
                if (grid[x][y] == "@") //if player ship is already there; player loses ship
                {
                    System.out.println("The Computer sunk one of your ships!");
                    grid[x][y] = "x";
                    --BattleShips.playerShips;
                }
                else if (grid[x][y] == "x") {
                    System.out.println("The Computer sunk one of its own ships");
                    grid[x][y] = "!";
                }
                else
                {
                    System.out.println("Computer missed");
                    //Saving missed guesses for computer
                    if(missedGuesses[x][y] != 1)
                        missedGuesses[x][y] = 1;
                }
            }
        }while((x < 0 || x >= Rows) || (y < 0 || y >= Cols));  //keep re-prompting till valid guess
    }
    //copied

    public static void DONE(){
        System.out.println("Your ships: " + BattleShips.playerShips + " | Computer ships: " + BattleShips.computerShips);
        if(BattleShips.playerShips > 0 && BattleShips.computerShips <= 0)
            System.out.println("You won the battle ");
        else
            System.out.println("You lost the battle");
        System.out.println();
    }

    public static void generateOceanMap(){
        System.out.println();
        System.out.print("  ");
        for(int i = 0; i < Cols; i++)
            System.out.print(i);
        System.out.println();
        for(int x = 0; x < grid.length; x++)
        {
            System.out.print(x + "|");
            for (int y = 0; y < grid[x].length; y++){
                System.out.print(grid[x][y]);
            }

            System.out.println("|"+x);
        }

        //Last section of Ocean Map
        System.out.print("  ");
        for(int i = 0; i < Cols; i++)
            System.out.print(i);
    }
}
